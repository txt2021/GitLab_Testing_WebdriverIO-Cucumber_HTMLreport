{"info":{"type":"runner","start":"2022-11-01T12:41:17.894Z","_duration":6676,"cid":"0-1","capabilities":{"acceptInsecureCerts":true,"browserName":"chrome","browserVersion":"106.0.5249.119","chrome":{"chromedriverVersion":"106.0.5249.61 (511755355844955cd3e264779baf0dd38212a4d0-refs/branch-heads/5249@{#569})","userDataDir":"/tmp/.com.google.Chrome.6h2A8g"},"goog:chromeOptions":{"debuggerAddress":"localhost:35299"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true,"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2"},"sanitizedCapabilities":"chrome.106_0_5249_119.linux","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"specs":["./features/**/*.feature"],"exclude":[],"suites":{},"baseUrl":"https://about.gitlab.com/","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"cucumber","reporters":[["html-nice",{"outputDir":"./report","linkScreenshots":false,"filename":"report.html","reportTitle":"Test report","showInBrowser":true,"collapseTests":false}]],"services":["chromedriver"],"execArgv":[],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"},"specs":["/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature"],"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","isMultiremote":false,"instanceOptions":{"588dd4cb5ce12f3d0aba6cd704cbc2b2":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"specs":["./features/**/*.feature"],"exclude":[],"suites":{},"baseUrl":"https://about.gitlab.com/","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"cucumber","reporters":[["html-nice",{"outputDir":"./report","linkScreenshots":false,"filename":"report.html","reportTitle":"Test report","showInBrowser":true,"collapseTests":false}]],"services":["chromedriver"],"execArgv":[],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"}},"retry":0,"failures":0,"retries":0,"end":"2022-11-01T12:41:24.570Z"},"metrics":{"passed":13,"skipped":0,"failed":0,"duration":6676,"start":"2022-11-01T12:41:17.895Z","end":"2022-11-01T12:41:24Z"},"title":"Test report","suites":[{"type":"feature","start":"2022-11-01T12:41:17.948Z","_duration":6566,"tests":[],"hooks":[],"suites":[{"type":"scenario","start":"2022-11-01T12:41:18.016Z","_duration":3119,"tests":[{"type":"test","start":"2022-11-01T12:41:18.018Z","_duration":6,"uid":"16","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"0: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:18.024Z"},{"type":"test","start":"2022-11-01T12:41:18.024Z","_duration":1721,"uid":"17","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"0: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8246abe4-b570-4fd9-91ad-82f6b959a33f"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/8246abe4-b570-4fd9-91ad-82f6b959a33f/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/8246abe4-b570-4fd9-91ad-82f6b959a33f/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:19.745Z"},{"type":"test","start":"2022-11-01T12:41:19.746Z","_duration":788,"uid":"18","cid":"0-1","title":"When A user enters \"testing\" in \"search\" field","fullTitle":"0: When A user enters \"testing\" in \"search\" field","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0db0745b-ad31-4df9-a91a-61eef3634505"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/clear","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/clear","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/value","body":{"text":"testing"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/value","body":{"text":"testing"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:20.534Z"},{"type":"test","start":"2022-11-01T12:41:20.534Z","_duration":32,"uid":"19","cid":"0-1","title":"When A user press Enter","fullTitle":"0: When A user press Enter","output":[{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:20.566Z"},{"type":"test","start":"2022-11-01T12:41:20.566Z","_duration":568,"uid":"20","cid":"0-1","title":"Then \"Results for testing\" title was displayed. User stays on the same page","fullTitle":"0: Then \"Results for testing\" title was displayed. User stays on the same page","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x5592316192c3 <unknown>\n#1 0x55923142283a <unknown>\n#2 0x55923145b985 <unknown>\n#3 0x55923145bb61 <unknown>\n#4 0x559231493d14 <unknown>\n#5 0x559231479f6d <unknown>\n#6 0x559231491a50 <unknown>\n#7 0x559231479d63 <unknown>\n#8 0x55923144e7e3 <unknown>\n#9 0x55923144fa21 <unknown>\n#10 0x55923166718e <unknown>\n#11 0x55923166a622 <unknown>\n#12 0x55923164daae <unknown>\n#13 0x55923166b2a3 <unknown>\n#14 0x559231641ecf <unknown>\n#15 0x55923168b588 <unknown>\n#16 0x55923168b706 <unknown>\n#17 0x5592316a58b2 <unknown>\n#18 0x7f688663b609 <unknown>\n"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x5592316192c3 <unknown>\n#1 0x55923142283a <unknown>\n#2 0x55923145b985 <unknown>\n#3 0x55923145bb61 <unknown>\n#4 0x559231493d14 <unknown>\n#5 0x559231479f6d <unknown>\n#6 0x559231491a50 <unknown>\n#7 0x559231479d63 <unknown>\n#8 0x55923144e7e3 <unknown>\n#9 0x55923144fa21 <unknown>\n#10 0x55923166718e <unknown>\n#11 0x55923166a622 <unknown>\n#12 0x55923164daae <unknown>\n#13 0x55923166b2a3 <unknown>\n#14 0x559231641ecf <unknown>\n#15 0x55923168b588 <unknown>\n#16 0x55923168b706 <unknown>\n#17 0x5592316a58b2 <unknown>\n#18 0x7f688663b609 <unknown>\n"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f","ELEMENT":"871e9498-5f20-4898-aefb-545526ad1c3f"}]},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f","ELEMENT":"871e9498-5f20-4898-aefb-545526ad1c3f"}]},"result":{"value":true},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:21.134Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:41:18.017Z","_duration":1,"uid":"52","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:41:18.018Z"},{"type":"hook","start":"2022-11-01T12:41:21.135Z","_duration":0,"uid":"58","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:41:21.135Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:41:18.017Z","_duration":1,"uid":"52","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:41:18.018Z"},{"type":"test","start":"2022-11-01T12:41:18.018Z","_duration":6,"uid":"16","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"0: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:18.024Z"},{"type":"test","start":"2022-11-01T12:41:18.024Z","_duration":1721,"uid":"17","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"0: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8246abe4-b570-4fd9-91ad-82f6b959a33f"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/8246abe4-b570-4fd9-91ad-82f6b959a33f/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/8246abe4-b570-4fd9-91ad-82f6b959a33f/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:19.745Z"},{"type":"test","start":"2022-11-01T12:41:19.746Z","_duration":788,"uid":"18","cid":"0-1","title":"When A user enters \"testing\" in \"search\" field","fullTitle":"0: When A user enters \"testing\" in \"search\" field","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0db0745b-ad31-4df9-a91a-61eef3634505"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/clear","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/clear","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/value","body":{"text":"testing"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0db0745b-ad31-4df9-a91a-61eef3634505/value","body":{"text":"testing"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:20.534Z"},{"type":"test","start":"2022-11-01T12:41:20.534Z","_duration":32,"uid":"19","cid":"0-1","title":"When A user press Enter","fullTitle":"0: When A user press Enter","output":[{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:20.566Z"},{"type":"test","start":"2022-11-01T12:41:20.566Z","_duration":568,"uid":"20","cid":"0-1","title":"Then \"Results for testing\" title was displayed. User stays on the same page","fullTitle":"0: Then \"Results for testing\" title was displayed. User stays on the same page","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x5592316192c3 <unknown>\n#1 0x55923142283a <unknown>\n#2 0x55923145b985 <unknown>\n#3 0x55923145bb61 <unknown>\n#4 0x559231493d14 <unknown>\n#5 0x559231479f6d <unknown>\n#6 0x559231491a50 <unknown>\n#7 0x559231479d63 <unknown>\n#8 0x55923144e7e3 <unknown>\n#9 0x55923144fa21 <unknown>\n#10 0x55923166718e <unknown>\n#11 0x55923166a622 <unknown>\n#12 0x55923164daae <unknown>\n#13 0x55923166b2a3 <unknown>\n#14 0x559231641ecf <unknown>\n#15 0x55923168b588 <unknown>\n#16 0x55923168b706 <unknown>\n#17 0x5592316a58b2 <unknown>\n#18 0x7f688663b609 <unknown>\n"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x5592316192c3 <unknown>\n#1 0x55923142283a <unknown>\n#2 0x55923145b985 <unknown>\n#3 0x55923145bb61 <unknown>\n#4 0x559231493d14 <unknown>\n#5 0x559231479f6d <unknown>\n#6 0x559231491a50 <unknown>\n#7 0x559231479d63 <unknown>\n#8 0x55923144e7e3 <unknown>\n#9 0x55923144fa21 <unknown>\n#10 0x55923166718e <unknown>\n#11 0x55923166a622 <unknown>\n#12 0x55923164daae <unknown>\n#13 0x55923166b2a3 <unknown>\n#14 0x559231641ecf <unknown>\n#15 0x55923168b588 <unknown>\n#16 0x55923168b706 <unknown>\n#17 0x5592316a58b2 <unknown>\n#18 0x7f688663b609 <unknown>\n"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f","ELEMENT":"871e9498-5f20-4898-aefb-545526ad1c3f"}]},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"871e9498-5f20-4898-aefb-545526ad1c3f","ELEMENT":"871e9498-5f20-4898-aefb-545526ad1c3f"}]},"result":{"value":true},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:21.134Z"},{"type":"hook","start":"2022-11-01T12:41:21.135Z","_duration":0,"uid":"58","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:41:21.135Z"}],"uid":"0","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC13 - Should check search work","fullTitle":"Search.feature:1:1: TC13 - Should check search work","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:41:21.136Z"},{"type":"scenario","start":"2022-11-01T12:41:21.136Z","_duration":1562,"tests":[{"type":"test","start":"2022-11-01T12:41:21.137Z","_duration":6,"uid":"22","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"1: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:21.143Z"},{"type":"test","start":"2022-11-01T12:41:21.143Z","_duration":1417,"uid":"23","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"1: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c4dbd107-6636-4b31-a895-af1a2234fc5c"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/c4dbd107-6636-4b31-a895-af1a2234fc5c/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/c4dbd107-6636-4b31-a895-af1a2234fc5c/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.560Z"},{"type":"test","start":"2022-11-01T12:41:22.560Z","_duration":70,"uid":"24","cid":"0-1","title":"When A user clicks on \"DevOps\" button","fullTitle":"1: When A user clicks on \"DevOps\" button","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8e926ec9-fffe-4f89-b717-b9e56c800eb7"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/8e926ec9-fffe-4f89-b717-b9e56c800eb7/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/8e926ec9-fffe-4f89-b717-b9e56c800eb7/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.630Z"},{"type":"test","start":"2022-11-01T12:41:22.630Z","_duration":67,"uid":"25","cid":"0-1","title":"Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","fullTitle":"1: Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.697Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:41:21.136Z","_duration":0,"uid":"60","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:41:21.136Z"},{"type":"hook","start":"2022-11-01T12:41:22.697Z","_duration":1,"uid":"65","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:41:22.698Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:41:21.136Z","_duration":0,"uid":"60","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:41:21.136Z"},{"type":"test","start":"2022-11-01T12:41:21.137Z","_duration":6,"uid":"22","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"1: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:21.143Z"},{"type":"test","start":"2022-11-01T12:41:21.143Z","_duration":1417,"uid":"23","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"1: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c4dbd107-6636-4b31-a895-af1a2234fc5c"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/c4dbd107-6636-4b31-a895-af1a2234fc5c/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/c4dbd107-6636-4b31-a895-af1a2234fc5c/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.560Z"},{"type":"test","start":"2022-11-01T12:41:22.560Z","_duration":70,"uid":"24","cid":"0-1","title":"When A user clicks on \"DevOps\" button","fullTitle":"1: When A user clicks on \"DevOps\" button","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8e926ec9-fffe-4f89-b717-b9e56c800eb7"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/8e926ec9-fffe-4f89-b717-b9e56c800eb7/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/8e926ec9-fffe-4f89-b717-b9e56c800eb7/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.630Z"},{"type":"test","start":"2022-11-01T12:41:22.630Z","_duration":67,"uid":"25","cid":"0-1","title":"Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","fullTitle":"1: Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.697Z"},{"type":"hook","start":"2022-11-01T12:41:22.697Z","_duration":1,"uid":"65","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:41:22.698Z"}],"uid":"1","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC14 - Should check search suggestions work","fullTitle":"Search.feature:1:1: TC14 - Should check search suggestions work","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:41:22.698Z"},{"type":"scenario","start":"2022-11-01T12:41:22.698Z","_duration":1816,"tests":[{"type":"test","start":"2022-11-01T12:41:22.698Z","_duration":3,"uid":"27","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"2: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.701Z"},{"type":"test","start":"2022-11-01T12:41:22.701Z","_duration":1675,"uid":"28","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"2: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"76a8d187-d88a-47ef-8193-90cf5a96dc8b"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/76a8d187-d88a-47ef-8193-90cf5a96dc8b/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/76a8d187-d88a-47ef-8193-90cf5a96dc8b/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.376Z"},{"type":"test","start":"2022-11-01T12:41:24.376Z","_duration":71,"uid":"29","cid":"0-1","title":"When A user clicks on \"gitlab.com\"","fullTitle":"2: When A user clicks on \"gitlab.com\"","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e6b89c99-53ec-4703-9412-6fecee1e0679"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e6b89c99-53ec-4703-9412-6fecee1e0679/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e6b89c99-53ec-4703-9412-6fecee1e0679/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.447Z"},{"type":"test","start":"2022-11-01T12:41:24.447Z","_duration":66,"uid":"30","cid":"0-1","title":"Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","fullTitle":"2: Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.513Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:41:22.698Z","_duration":0,"uid":"67","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:41:22.698Z"},{"type":"hook","start":"2022-11-01T12:41:24.513Z","_duration":1,"uid":"72","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:41:24.514Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:41:22.698Z","_duration":0,"uid":"67","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:41:22.698Z"},{"type":"test","start":"2022-11-01T12:41:22.698Z","_duration":3,"uid":"27","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"2: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:22.701Z"},{"type":"test","start":"2022-11-01T12:41:22.701Z","_duration":1675,"uid":"28","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"2: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"76a8d187-d88a-47ef-8193-90cf5a96dc8b"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/76a8d187-d88a-47ef-8193-90cf5a96dc8b/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/76a8d187-d88a-47ef-8193-90cf5a96dc8b/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.376Z"},{"type":"test","start":"2022-11-01T12:41:24.376Z","_duration":71,"uid":"29","cid":"0-1","title":"When A user clicks on \"gitlab.com\"","fullTitle":"2: When A user clicks on \"gitlab.com\"","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e6b89c99-53ec-4703-9412-6fecee1e0679"}},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e6b89c99-53ec-4703-9412-6fecee1e0679/click","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e6b89c99-53ec-4703-9412-6fecee1e0679/click","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.447Z"},{"type":"test","start":"2022-11-01T12:41:24.447Z","_duration":66,"uid":"30","cid":"0-1","title":"Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","fullTitle":"2: Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"588dd4cb5ce12f3d0aba6cd704cbc2b2","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:41:24.513Z"},{"type":"hook","start":"2022-11-01T12:41:24.513Z","_duration":1,"uid":"72","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:41:24.514Z"}],"uid":"2","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC15 - Should redirect user to sign in form frome search page","fullTitle":"Search.feature:1:1: TC15 - Should redirect user to sign in form frome search page","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:41:24.514Z"}],"hooksAndTests":[],"uid":"Search.feature:1:1","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"Search work","tags":[],"description":"","end":"2022-11-01T12:41:24.515Z"}],"reportFile":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/report/report-0-1.html","browserName":"not specified"}