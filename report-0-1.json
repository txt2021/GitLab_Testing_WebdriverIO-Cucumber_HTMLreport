{"info":{"type":"runner","start":"2022-11-01T12:52:46.860Z","_duration":5324,"cid":"0-1","capabilities":{"acceptInsecureCerts":true,"browserName":"chrome","browserVersion":"106.0.5249.119","chrome":{"chromedriverVersion":"106.0.5249.61 (511755355844955cd3e264779baf0dd38212a4d0-refs/branch-heads/5249@{#569})","userDataDir":"/tmp/.com.google.Chrome.YtHLv6"},"goog:chromeOptions":{"debuggerAddress":"localhost:36337"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true,"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94"},"sanitizedCapabilities":"chrome.106_0_5249_119.linux","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"specs":["./features/**/*.feature"],"exclude":[],"suites":{},"baseUrl":"https://about.gitlab.com/","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"cucumber","reporters":[["html-nice",{"outputDir":"./report","linkScreenshots":false,"filename":"report.html","reportTitle":"Test report","showInBrowser":true,"collapseTests":false}]],"services":["chromedriver"],"execArgv":[],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"},"specs":["/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature"],"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","isMultiremote":false,"instanceOptions":{"8f5031bfbefccbd8dea7f7189ea40f94":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--window-size=1500,1000"]},"acceptInsecureCerts":true},"specs":["./features/**/*.feature"],"exclude":[],"suites":{},"baseUrl":"https://about.gitlab.com/","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"cucumber","reporters":[["html-nice",{"outputDir":"./report","linkScreenshots":false,"filename":"report.html","reportTitle":"Test report","showInBrowser":true,"collapseTests":false}]],"services":["chromedriver"],"execArgv":[],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"}},"retry":0,"failures":0,"retries":0,"end":"2022-11-01T12:52:52.184Z"},"metrics":{"passed":13,"skipped":0,"failed":0,"duration":5324,"start":"2022-11-01T12:52:46.860Z","end":"2022-11-01T12:52:52Z"},"title":"Test report","suites":[{"type":"feature","start":"2022-11-01T12:52:46.896Z","_duration":5218,"tests":[],"hooks":[],"suites":[{"type":"scenario","start":"2022-11-01T12:52:46.930Z","_duration":2319,"tests":[{"type":"test","start":"2022-11-01T12:52:46.932Z","_duration":8,"uid":"16","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"0: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:46.940Z"},{"type":"test","start":"2022-11-01T12:52:46.945Z","_duration":1262,"uid":"17","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"0: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"308fc045-a2a0-488e-9b0f-256092924580"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/308fc045-a2a0-488e-9b0f-256092924580/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/308fc045-a2a0-488e-9b0f-256092924580/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.207Z"},{"type":"test","start":"2022-11-01T12:52:48.208Z","_duration":464,"uid":"18","cid":"0-1","title":"When A user enters \"testing\" in \"search\" field","fullTitle":"0: When A user enters \"testing\" in \"search\" field","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f8b61706-fc47-4303-935f-5d512cd0367d"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/clear","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/clear","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/value","body":{"text":"testing"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/value","body":{"text":"testing"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.672Z"},{"type":"test","start":"2022-11-01T12:52:48.672Z","_duration":22,"uid":"19","cid":"0-1","title":"When A user press Enter","fullTitle":"0: When A user press Enter","output":[{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.694Z"},{"type":"test","start":"2022-11-01T12:52:48.694Z","_duration":554,"uid":"20","cid":"0-1","title":"Then \"Results for testing\" title was displayed. User stays on the same page","fullTitle":"0: Then \"Results for testing\" title was displayed. User stays on the same page","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x559aaa16d2c3 <unknown>\n#1 0x559aa9f7683a <unknown>\n#2 0x559aa9faf985 <unknown>\n#3 0x559aa9fafb61 <unknown>\n#4 0x559aa9fe7d14 <unknown>\n#5 0x559aa9fcdf6d <unknown>\n#6 0x559aa9fe5a50 <unknown>\n#7 0x559aa9fcdd63 <unknown>\n#8 0x559aa9fa27e3 <unknown>\n#9 0x559aa9fa3a21 <unknown>\n#10 0x559aaa1bb18e <unknown>\n#11 0x559aaa1be622 <unknown>\n#12 0x559aaa1a1aae <unknown>\n#13 0x559aaa1bf2a3 <unknown>\n#14 0x559aaa195ecf <unknown>\n#15 0x559aaa1df588 <unknown>\n#16 0x559aaa1df706 <unknown>\n#17 0x559aaa1f98b2 <unknown>\n#18 0x7efc62f9e609 <unknown>\n"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x559aaa16d2c3 <unknown>\n#1 0x559aa9f7683a <unknown>\n#2 0x559aa9faf985 <unknown>\n#3 0x559aa9fafb61 <unknown>\n#4 0x559aa9fe7d14 <unknown>\n#5 0x559aa9fcdf6d <unknown>\n#6 0x559aa9fe5a50 <unknown>\n#7 0x559aa9fcdd63 <unknown>\n#8 0x559aa9fa27e3 <unknown>\n#9 0x559aa9fa3a21 <unknown>\n#10 0x559aaa1bb18e <unknown>\n#11 0x559aaa1be622 <unknown>\n#12 0x559aaa1a1aae <unknown>\n#13 0x559aaa1bf2a3 <unknown>\n#14 0x559aaa195ecf <unknown>\n#15 0x559aaa1df588 <unknown>\n#16 0x559aaa1df706 <unknown>\n#17 0x559aaa1f98b2 <unknown>\n#18 0x7efc62f9e609 <unknown>\n"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7","ELEMENT":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}]},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7","ELEMENT":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}]},"result":{"value":true},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:49.248Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:52:46.931Z","_duration":0,"uid":"52","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:52:46.931Z"},{"type":"hook","start":"2022-11-01T12:52:49.248Z","_duration":0,"uid":"58","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:52:49.248Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:52:46.931Z","_duration":0,"uid":"52","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:52:46.931Z"},{"type":"test","start":"2022-11-01T12:52:46.932Z","_duration":8,"uid":"16","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"0: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:46.940Z"},{"type":"test","start":"2022-11-01T12:52:46.945Z","_duration":1262,"uid":"17","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"0: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"308fc045-a2a0-488e-9b0f-256092924580"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/308fc045-a2a0-488e-9b0f-256092924580/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/308fc045-a2a0-488e-9b0f-256092924580/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.207Z"},{"type":"test","start":"2022-11-01T12:52:48.208Z","_duration":464,"uid":"18","cid":"0-1","title":"When A user enters \"testing\" in \"search\" field","fullTitle":"0: When A user enters \"testing\" in \"search\" field","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"input[placeholder=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f8b61706-fc47-4303-935f-5d512cd0367d"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/clear","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/clear","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/value","body":{"text":"testing"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/f8b61706-fc47-4303-935f-5d512cd0367d/value","body":{"text":"testing"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.672Z"},{"type":"test","start":"2022-11-01T12:52:48.672Z","_duration":22,"uid":"19","cid":"0-1","title":"When A user press Enter","fullTitle":"0: When A user press Enter","output":[{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/actions","body":{"actions":[{"type":"key","id":"keyboard","actions":[{"type":"keyDown","value":""},{"type":"keyUp","value":""}]}]},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId/actions","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:48.694Z"},{"type":"test","start":"2022-11-01T12:52:48.694Z","_duration":554,"uid":"20","cid":"0-1","title":"Then \"Results for testing\" title was displayed. User stays on the same page","fullTitle":"0: Then \"Results for testing\" title was displayed. User stays on the same page","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x559aaa16d2c3 <unknown>\n#1 0x559aa9f7683a <unknown>\n#2 0x559aa9faf985 <unknown>\n#3 0x559aa9fafb61 <unknown>\n#4 0x559aa9fe7d14 <unknown>\n#5 0x559aa9fcdf6d <unknown>\n#6 0x559aa9fe5a50 <unknown>\n#7 0x559aa9fcdd63 <unknown>\n#8 0x559aa9fa27e3 <unknown>\n#9 0x559aa9fa3a21 <unknown>\n#10 0x559aaa1bb18e <unknown>\n#11 0x559aaa1be622 <unknown>\n#12 0x559aaa1a1aae <unknown>\n#13 0x559aaa1bf2a3 <unknown>\n#14 0x559aaa195ecf <unknown>\n#15 0x559aaa1df588 <unknown>\n#16 0x559aaa1df706 <unknown>\n#17 0x559aaa1f98b2 <unknown>\n#18 0x7efc62f9e609 <unknown>\n"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[class=\"search-results__header\"]\"}\n  (Session info: headless chrome=106.0.5249.119)","stacktrace":"#0 0x559aaa16d2c3 <unknown>\n#1 0x559aa9f7683a <unknown>\n#2 0x559aa9faf985 <unknown>\n#3 0x559aa9fafb61 <unknown>\n#4 0x559aa9fe7d14 <unknown>\n#5 0x559aa9fcdf6d <unknown>\n#6 0x559aa9fe5a50 <unknown>\n#7 0x559aa9fcdd63 <unknown>\n#8 0x559aa9fa27e3 <unknown>\n#9 0x559aa9fa3a21 <unknown>\n#10 0x559aaa1bb18e <unknown>\n#11 0x559aaa1be622 <unknown>\n#12 0x559aaa1a1aae <unknown>\n#13 0x559aaa1bf2a3 <unknown>\n#14 0x559aaa195ecf <unknown>\n#15 0x559aaa1df588 <unknown>\n#16 0x559aaa1df706 <unknown>\n#17 0x559aaa1f98b2 <unknown>\n#18 0x7efc62f9e609 <unknown>\n"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"[class=\"search-results__header\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7","ELEMENT":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}]},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof ShadowRoot) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7","ELEMENT":"e9b7bb0e-1633-49f8-9188-6a64039c0ce7"}]},"result":{"value":true},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:49.248Z"},{"type":"hook","start":"2022-11-01T12:52:49.248Z","_duration":0,"uid":"58","cid":"0-1","title":"","parent":"0","errors":[],"end":"2022-11-01T12:52:49.248Z"}],"uid":"0","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC13 - Should check search work","fullTitle":"Search.feature:1:1: TC13 - Should check search work","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:52:49.249Z"},{"type":"scenario","start":"2022-11-01T12:52:49.249Z","_duration":1306,"tests":[{"type":"test","start":"2022-11-01T12:52:49.249Z","_duration":2,"uid":"22","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"1: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:49.251Z"},{"type":"test","start":"2022-11-01T12:52:49.251Z","_duration":1234,"uid":"23","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"1: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"6ddd04af-01bc-466e-bdbe-d2ad8412e70b"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/6ddd04af-01bc-466e-bdbe-d2ad8412e70b/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/6ddd04af-01bc-466e-bdbe-d2ad8412e70b/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.485Z"},{"type":"test","start":"2022-11-01T12:52:50.485Z","_duration":62,"uid":"24","cid":"0-1","title":"When A user clicks on \"DevOps\" button","fullTitle":"1: When A user clicks on \"DevOps\" button","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"5b1a1dfb-328e-498d-b144-70b02328204c"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/5b1a1dfb-328e-498d-b144-70b02328204c/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/5b1a1dfb-328e-498d-b144-70b02328204c/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.547Z"},{"type":"test","start":"2022-11-01T12:52:50.547Z","_duration":8,"uid":"25","cid":"0-1","title":"Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","fullTitle":"1: Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.555Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:52:49.249Z","_duration":0,"uid":"60","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:52:49.249Z"},{"type":"hook","start":"2022-11-01T12:52:50.555Z","_duration":0,"uid":"65","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:52:50.555Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:52:49.249Z","_duration":0,"uid":"60","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:52:49.249Z"},{"type":"test","start":"2022-11-01T12:52:49.249Z","_duration":2,"uid":"22","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"1: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:49.251Z"},{"type":"test","start":"2022-11-01T12:52:49.251Z","_duration":1234,"uid":"23","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"1: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"6ddd04af-01bc-466e-bdbe-d2ad8412e70b"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/6ddd04af-01bc-466e-bdbe-d2ad8412e70b/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/6ddd04af-01bc-466e-bdbe-d2ad8412e70b/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.485Z"},{"type":"test","start":"2022-11-01T12:52:50.485Z","_duration":62,"uid":"24","cid":"0-1","title":"When A user clicks on \"DevOps\" button","fullTitle":"1: When A user clicks on \"DevOps\" button","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[data-ga-name=\"DevOps\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"5b1a1dfb-328e-498d-b144-70b02328204c"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/5b1a1dfb-328e-498d-b144-70b02328204c/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/5b1a1dfb-328e-498d-b144-70b02328204c/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.547Z"},{"type":"test","start":"2022-11-01T12:52:50.547Z","_duration":8,"uid":"25","cid":"0-1","title":"Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","fullTitle":"1: Then \"What is DevOps?\" title was displayed. User was redirected to the \"https://about.gitlab.com/topics/devops/\" page","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.555Z"},{"type":"hook","start":"2022-11-01T12:52:50.555Z","_duration":0,"uid":"65","cid":"0-1","title":"","parent":"1","errors":[],"end":"2022-11-01T12:52:50.555Z"}],"uid":"1","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC14 - Should check search suggestions work","fullTitle":"Search.feature:1:1: TC14 - Should check search suggestions work","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:52:50.556Z"},{"type":"scenario","start":"2022-11-01T12:52:50.556Z","_duration":1558,"tests":[{"type":"test","start":"2022-11-01T12:52:50.556Z","_duration":1,"uid":"27","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"2: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.557Z"},{"type":"test","start":"2022-11-01T12:52:50.557Z","_duration":1241,"uid":"28","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"2: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"58f07dea-dc26-4ceb-a05a-f2b3e14d8700"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/58f07dea-dc26-4ceb-a05a-f2b3e14d8700/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/58f07dea-dc26-4ceb-a05a-f2b3e14d8700/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:51.798Z"},{"type":"test","start":"2022-11-01T12:52:51.799Z","_duration":305,"uid":"29","cid":"0-1","title":"When A user clicks on \"gitlab.com\"","fullTitle":"2: When A user clicks on \"gitlab.com\"","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d8d31cc2-be0e-44ab-89fb-1eeff47373d5"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/d8d31cc2-be0e-44ab-89fb-1eeff47373d5/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/d8d31cc2-be0e-44ab-89fb-1eeff47373d5/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:52.104Z"},{"type":"test","start":"2022-11-01T12:52:52.104Z","_duration":9,"uid":"30","cid":"0-1","title":"Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","fullTitle":"2: Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:52.113Z"}],"hooks":[{"type":"hook","start":"2022-11-01T12:52:50.556Z","_duration":0,"uid":"67","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:52:50.556Z"},{"type":"hook","start":"2022-11-01T12:52:52.113Z","_duration":0,"uid":"72","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:52:52.113Z"}],"suites":[],"hooksAndTests":[{"type":"hook","start":"2022-11-01T12:52:50.556Z","_duration":0,"uid":"67","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:52:50.556Z"},{"type":"test","start":"2022-11-01T12:52:50.556Z","_duration":1,"uid":"27","cid":"0-1","title":"Given A user open main GitLab page","fullTitle":"2: Given A user open main GitLab page","output":[{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:50.557Z"},{"type":"test","start":"2022-11-01T12:52:50.557Z","_duration":1241,"uid":"28","cid":"0-1","title":"When A user clicks on search icon","fullTitle":"2: When A user clicks on search icon","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://about.gitlab.com/"},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"button[aria-label=\"Search\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"58f07dea-dc26-4ceb-a05a-f2b3e14d8700"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/58f07dea-dc26-4ceb-a05a-f2b3e14d8700/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/58f07dea-dc26-4ceb-a05a-f2b3e14d8700/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:51.798Z"},{"type":"test","start":"2022-11-01T12:52:51.799Z","_duration":305,"uid":"29","cid":"0-1","title":"When A user clicks on \"gitlab.com\"","fullTitle":"2: When A user clicks on \"gitlab.com\"","output":[{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"a[href=\"https://gitlab.com/users/sign_in/\"]"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d8d31cc2-be0e-44ab-89fb-1eeff47373d5"}},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/d8d31cc2-be0e-44ab-89fb-1eeff47373d5/click","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/d8d31cc2-be0e-44ab-89fb-1eeff47373d5/click","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:52.104Z"},{"type":"test","start":"2022-11-01T12:52:52.104Z","_duration":9,"uid":"30","cid":"0-1","title":"Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","fullTitle":"2: Then User was redirected to the \"https://gitlab.com/users/sign_in/\" page. Sign in form was displayed","output":[{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/url","body":{},"result":{"value":"https://about.gitlab.com/"},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"8f5031bfbefccbd8dea7f7189ea40f94","cid":"0-1","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0,"end":"2022-11-01T12:52:52.113Z"},{"type":"hook","start":"2022-11-01T12:52:52.113Z","_duration":0,"uid":"72","cid":"0-1","title":"","parent":"2","errors":[],"end":"2022-11-01T12:52:52.113Z"}],"uid":"2","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"TC15 - Should redirect user to sign in form frome search page","fullTitle":"Search.feature:1:1: TC15 - Should redirect user to sign in form frome search page","tags":[],"parent":"Search.feature:1:1","end":"2022-11-01T12:52:52.114Z"}],"hooksAndTests":[],"uid":"Search.feature:1:1","cid":"0-1","file":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/features/Search.feature","title":"Search work","tags":[],"description":"","end":"2022-11-01T12:52:52.115Z"}],"reportFile":"/home/runner/work/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/GitLab_Testing_WebdriverIO-Cucumber_HTMLreport/report/report-0-1.html","browserName":"not specified"}